{"src/index.js":{"hash":"8afff971936d05c382335c1c7f304e49","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/App.js":{"hash":"f7ffabfeb60f3b9e3c6a93dd3893b337","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'data' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","source":"import data from '../../public/data.json';"},{"ruleId":"no-unused-vars","severity":1,"message":"'numbers' is assigned a value but never used.","line":10,"column":7,"nodeType":"Identifier","source":"const numbers = [1, 2, 3, 4, 5];"},{"ruleId":"no-unused-vars","severity":1,"message":"'$set' is defined but never used.","line":12,"column":10,"nodeType":"Identifier","source":"function $set(...objects) {"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '!==' and instead saw '!='.","line":75,"column":90,"nodeType":"BinaryExpression","source":"    const features = this.state.data.features.filter((store) => store.properties.country != filterCriteria)    "},{"ruleId":"react/jsx-equals-spacing","severity":1,"message":"There should be no space after '='","line":90,"column":27,"nodeType":"JSXAttribute","source":"          isLocSubMenuOpen= {this.state.isLocSubMenuOpen}          ","fix":{"range":[2439,2440],"text":""}},{"ruleId":"react/jsx-equals-spacing","severity":1,"message":"There should be no space before '='","line":91,"column":29,"nodeType":"JSXAttribute","source":"          isTypeSubMenuOpen = {this.state.isTypeSubMenuOpen}","fix":{"range":[2507,2508],"text":""}},{"ruleId":"react/jsx-equals-spacing","severity":1,"message":"There should be no space after '='","line":91,"column":29,"nodeType":"JSXAttribute","source":"          isTypeSubMenuOpen = {this.state.isTypeSubMenuOpen}","fix":{"range":[2509,2510],"text":""}},{"ruleId":"react/jsx-equals-spacing","severity":1,"message":"There should be no space after '='","line":93,"column":27,"nodeType":"JSXAttribute","source":"          toggleSubmenuLoc= {this.toggleSubmenuLoc}     ","fix":{"range":[2629,2630],"text":""}},{"ruleId":"react/jsx-equals-spacing","severity":1,"message":"There should be no space after '='","line":94,"column":28,"nodeType":"JSXAttribute","source":"          toggleSubmenuType= {this.toggleSubmenuType}     ","fix":{"range":[2687,2688],"text":""}}],"errorCount":0,"warningCount":9,"source":"import React, {Component} from 'react';\nimport './App.css';\nimport data from '../../public/data.json';\nimport MySidebar from './MySidebar';\nimport request from 'request-promise';\n\n\n// import LocationFilters from './LocationFilter'\n\nconst numbers = [1, 2, 3, 4, 5];\n\nfunction $set(...objects) {\n  return Object.assign({}, ...objects);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      sidebarOpen: false,\n      pullRight: true,\n      isLocSubMenuOpen: false,\n      isTypeSubMenuOpen: false,\n      \n    };\n  }\n  componentDidMount (prevProps, prevState) {\n    request('http://localhost:3000/mapjson')      \n      .then(data =>{ this.setState({data: JSON.parse(data)}) })                    \n  }\n  \n  handleFilter = (e)=>{    \n    e.preventDefault();  \n    console.log(e.target.value);\n    this.setState({data: e.target.value});\n    // console.log(this.state.subMenuToRender);\n  }\n\n  handleFilterType = (e)=>{    \n    e.preventDefault();  \n    console.log(e.target.value);\n    this.setState({subMenuToRender: e.target.value});\n    console.log(this.state.subMenuToRender);\n  }\n\n  // set sidebar state\n  onSetSidebarOpen = (open) => {\n    this.setState({sidebarOpen: open});\n  }\n\n  // toggle sidebar button\n  menuButtonClick = (e) => {\n    e.preventDefault();    \n    this.onSetSidebarOpen(!this.state.sidebarOpen);\n  };\n\n  // toggle lcoation filters submenu\n  toggleSubmenuLoc = () => {\n    console.log(this.state.isLocSubMenuOpen);    \n    this.setState({isLocSubMenuOpen : !this.state.isLocSubMenuOpen});    \n  };\n  \n  //toggle type filters submenu\n  toggleSubmenuType = () => {\n    console.log(this.state.isLocSubMenuOpen);    \n    this.setState({isTypeSubMenuOpen : !this.state.isTypeSubMenuOpen});    \n  };\n\n  // TODO: momentarily filtering only on countries to implement a generic\n  // abstractoin that filters everything\n  handleNodeRemoval = () => {\n    console.log(this.state);\n    let filterCriteria  = 'USA';           \n    const features = this.state.data.features.filter((store) => store.properties.country != filterCriteria)    \n    this.setState({ data: { ...this.state.data, features } })\n  };\n\n  handleNodesReset = () => {\n    this.setState(this.state);\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <MySidebar           \n          data={this.state.data}\n          sidebarOpen={this.state.sidebarOpen}          \n          isLocSubMenuOpen= {this.state.isLocSubMenuOpen}          \n          isTypeSubMenuOpen = {this.state.isTypeSubMenuOpen}\n          handleFilterType={this.handleFilterType}          \n          toggleSubmenuLoc= {this.toggleSubmenuLoc}     \n          toggleSubmenuType= {this.toggleSubmenuType}     \n          onSetOpen={this.onSetSidebarOpen}\n          removeNode={this.handleNodeRemoval}\n          resetNodes={this.handleNodesReset}\n          menuButtonClick={this.menuButtonClick}\n          handleFilter={this.handleFilter}\n          \n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"}],"errorCount":0,"warningCount":9}},"src/Components/MySidebar.js":{"hash":"773bdc7b6ee799dd6e3d38c382d61bdf","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/src/Components/MySidebar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/SidebarContent.js":{"hash":"eb5122343b6080707a801d66021ddc1e","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/SidebarContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","source":"import React, {Component} from 'react';"},{"ruleId":"no-unused-vars","severity":1,"message":"'Sidebar' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","source":"import Sidebar from 'react-sidebar';"},{"ruleId":"no-unused-vars","severity":1,"message":"'FilterButtonsMenu' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","source":"import FilterButtonsMenu from './FilterButtons.js';"}],"errorCount":0,"warningCount":3,"source":"import React, {Component} from 'react';\nimport Sidebar from 'react-sidebar';\nimport FilterButtonsMenu from './FilterButtons.js';\nimport SuggestWidget from './SuggestWidget.js'\n// import Example from './autoexample.js'\n\nconst styles = {\n    sidebar: {\n        width: 256\n\n    },\n    sidebarLink: {\n        display: 'block',\n        padding: '16px 0px',\n        color: '#757575',\n        textDecoration: 'none'\n    },\n    divider: {\n        margin: '8px 0',\n        height: 1,\n        backgroundColor: '#757575'\n    },\n    content: {\n        padding: '16px',\n        backgroundColor: 'white'\n    }\n};\n\n\n\n\n\nfunction SidebarContent(props) {    \n\n    return (\n        <div style={styles.content}>\n                {console.log(props)}\n             <SuggestWidget suggestions={props.data} onFilter={props.onFilter} />\n            {/*<Example suggestions={props.data.features}/>*/}\n        </div>\n    )\n};\n\nexport default SidebarContent;"}],"errorCount":0,"warningCount":3}},"src/Components/MyHeader.js":{"hash":"067413549de27c5f317a7d223db9940a","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/MyHeader.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MyMap.js":{"hash":"d395df60bf6542841bf1b6c5598f1981","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/MyMap.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/StoreList.js":{"hash":"1b8c4f77ec68bfce2cfdd38f278bc923","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/StoreList.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/FilterButtons.js":{"hash":"98c8fb44900b421d51a12b4c92d5b110","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/FilterButtons.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","source":"import React, {Component} from 'react';"},{"ruleId":"no-lone-blocks","severity":1,"message":"Block is redundant.","line":160,"column":1,"nodeType":"BlockStatement","source":"{/*{FilterButtonsList}*/}                "},{"ruleId":"no-lone-blocks","severity":1,"message":"Block is redundant.","line":161,"column":17,"nodeType":"BlockStatement","source":"                {/*<FilterButtonsList "},{"ruleId":"no-lone-blocks","severity":1,"message":"Block is redundant.","line":164,"column":17,"nodeType":"BlockStatement","source":"                {/*{FilterButtonSubMenu}*/}"}],"errorCount":0,"warningCount":4,"source":"import React, {Component} from 'react';\n\n\n\n\n// const FilterButtonSubMenuLoc = (props) => {    \n    \n//     // const FilterButtonTypes = ['country', 'zip', 'state_province'];        \n//     const FilterButtonTypes = [\n//             {filterType: 'country',\n//             content: 'Country',\n//             index:1},\n//             {filterType: 'zip' ,\n//             content: 'Zip',\n//             index:2},\n//             {filterType: 'state_province',\n//             content: 'Province' ,\n//             index:3}\n//         ];\n    \n//     const SubMenuItem = []; \n    \n//     const FilterButtonItem = (props) => (                \n//         <div\n//             className=\"fl w-third bt bb tc mw7 center mt4 bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\" >{props.content}\n//         </div>    \n//     ); \n\n//     FilterButtonTypes.map((type,index) => {\n        \n//         SubMenuItem.push(\n//             <FilterButtonItem \n//                     key={index} \n//                      onClick={console.log(props)}                   \n//                     content={type.content}\n//                     filterType={type.filterType}/>\n//         )}\n//     );\n    \n//     return  <div >\n//             <div\n//             className=\"fl w-third bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n//             onClick={props.handleFilterType} type={'country'}>Country</div>\n        \n//                 {SubMenuItem}\n//             </div>\n// };\n\n\nconst FilterButtonSubMenuLoc = (props) => {\n    \n\n    return <div className='w-100 mb6 avenir black-80 f5-l'>\n        <div\n            className=\"fl w-third bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={ props.handleFilterType } value={\"adsds\"}>Country</div>\n        <div\n            className=\"fl w-third bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\"\n            onClick={props.handleFilterType} value={'zip'}>Zip</div>\n        <div\n            className=\"fl w-third bt bb tc mw7 center mt4 bg-animate black-80 hover-bg-light-pink dib pa3 ph4-l\"\n            onClick={props.handleFilterType} value={'state_province'}>Province</div>\n    </div>\n};\n    \nconst FilterButtonSubMenuType = (props)=>{   \n\n    return <div className='w-100 mb6 avenir black-80 f5-l'>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>Headquarter</div>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>Distributor</div>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>Retail</div>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>Factory Outlet</div>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>Factory Store</div>\n        <div\n            className=\"fl w-20 bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n            onClick={props.removeNode}>e-Commerce and Store</div>\n    </div>\n\n};\n    \n\nconst FirstLevel = (props) => {  \n              return <nav>\n                    <div\n                        className=\"fl w-third bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-lightest-blue dib pa3 ph4-l\"\n                        onClick={props.toggleSubmenuLoc}>Location</div>\n                    <div\n                        className=\"fl w-third bt bb tc mw7 center mt4  bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\" \n                        onClick={props.toggleSubmenuType}>Type</div>\n                    <div\n                        className=\"fl w-third bt bb tc mw7 center mt4 bg-animate black-80 hover-bg-light-pink dib pa3 ph4-l\"\n                        onClick={props.resetNodes}>Reset</div>                      \n                </nav>\n}\n\nconst FilterButtonsMenu = (props) => {\n       return (\n            <div>\n                <div className='w-100 mb6 avenir black-80 f5-l'>                \n                    <FirstLevel {...props}/>                 \n                </div>\n                <div className='w-100 mb6 avenir black-80 f5-l'>\n                    {props.isTypeSubMenuOpen ? <FilterButtonSubMenuType {...props}/> : null }               \n                    {props.isLocSubMenuOpen ? <FilterButtonSubMenuLoc {...props}/> : null }               \n                </div>\n            </div>\n        )\n \n};\n\nexport default FilterButtonsMenu;\n\n\n\n\n\n// const FilterButtonSubMenuConstructor = (props) => {\n\n//     if (props.FilterButtonSubMenuType == 'location') {\n//         return FilterButtonSubMenuLoc\n\n//     } else if (props.FilterButtonSubMenuType == 'reseller') {\n//         return FilterButtonSubMenuRes\n//     } else {\n//         return\n//     }\n// };\n\n\n// const FilterButtonSubMenu = null; \n\n// const createSubMenu = (props)=>{\n    \n// //     // props.handleFilterType();\n// //     if (props.FilterButtonSubMenuType == 'location') {\n// //     // FilterButtonSubMenu = FilterButtonSubMenuLoc\n// //     return a\n\n// // } else if (props.FilterButtonSubMenuType == 'reseller') {\n// //     // FilterButtonSubMenu = FilterButtonSubMenuRes; \n// //     return b\n// // } else {\n// //     return\n// // }\n// };\n\n\n// SEE THIS http://stackoverflow.com/a/33117414\n\n{/*{FilterButtonsList}*/}                \n                {/*<FilterButtonsList \n                    onClick={createSubMenu}\n                    handleFilterType ={props.handleFilterType} />*/}\n                {/*{FilterButtonSubMenu}*/}\n\n\n\n// {filterType: 'country',\n        // color: 'blu',\n        // id:1},\n        // {filterType: 'zip' ,\n        // color: 'green',\n        // id:2},\n        // {filterType: 'state_province',\n        // color: 'yellow' ,\n        // id:3}];"}],"errorCount":0,"warningCount":4}},"src/Components/SuggestWidget.js":{"hash":"92f96b035bf331be6867d8ac04ea37c0","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/client/src/Components/SuggestWidget.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","source":"import React, {Component} from 'react';"},{"ruleId":"no-unused-expressions","severity":1,"message":"Expected an assignment or function call and instead saw an expression.","line":20,"column":3,"nodeType":"ExpressionStatement","source":"  suggestion.text"}],"errorCount":0,"warningCount":2,"source":"import React, {Component} from 'react';\nimport Autosuggest from 'react-autosuggest';\n\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = (value,arrayToCompare) => {    \n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : arrayToCompare.filter(lang =>{\n  console.log(lang.text.toLowerCase().slice(0, inputLength) )\n    return lang.text.toLowerCase().slice(0, inputLength) === inputValue}\n  );\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input element\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => {  \n  suggestion.text\n};\n\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n  <div>    \n    {suggestion.text}    \n  </div>\n);\n\n\n\nclass SuggestWidget extends React.Component {\n constructor() {\n    super();\n    \n    // Autosuggest is a controlled component.\n    // This means that you need to provide an input value\n    // and an onChange handler that updates this value (see below).\n    // Suggestions also need to be provided to the Autosuggest,\n    // and they are initially empty because the Autosuggest is closed.\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {    \n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ( {value}) => {\n    this.setState({\n      suggestions: getSuggestions(value,  this.props.suggestions)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (e, suggestion) => {\n    // TODO: zoom to marker or somthing..\n    console.log(suggestion )\n  }\n\n  render() {    \n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input element.\n    const inputProps = {\n      placeholder: 'Type a programming language',\n      value,\n      onChange: this.onChange\n    };\n\n    // Finally, render it!\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionSelected={this.onSuggestionSelected}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n        onClick={this.props.onFilter}\n        \n      />\n    );\n  }\n};\n\nexport default SuggestWidget;"}],"errorCount":0,"warningCount":2}},"src/Components/autoexample.js":{"hash":"43948c18027e32dfbe879c181d01009b","res":{"results":[{"filePath":"/Users/mferretti/Documents/Work/todo/chen-research-assistant/dev/visualise-tweets/react-tweet-viz/src/Components/autoexample.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":1,"column":16,"nodeType":"Identifier","source":"import React, {Component} from 'react';"}],"errorCount":0,"warningCount":1,"source":"import React, {Component} from 'react';\nimport Autosuggest from 'react-autosuggest';\n\n// Imagine you have a list of languages that you'd like to autosuggest.\nconst languages = [\n  {\n    name: 'C',\n    year: 1972\n  },\n  {\n    name: 'Elm',\n    year: 2012\n  },\n\n];\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : languages.filter(lang =>\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\n  );\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input element\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nclass Example extends React.Component {\n  constructor() {\n    super();\n\n    // Autosuggest is a controlled component.\n    // This means that you need to provide an input value\n    // and an onChange handler that updates this value (see below).\n    // Suggestions also need to be provided to the Autosuggest,\n    // and they are initially empty because the Autosuggest is closed.\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input element.\n    const inputProps = {\n      placeholder: 'Type a programming language',\n      value,\n      onChange: this.onChange\n    };\n\n    // Finally, render it!\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\n\nexport default Example"}],"errorCount":0,"warningCount":1}}}